import { expect, test } from '@playwright/test';
import { PageManager } from '../page-objects/pageManager';

let pm: PageManager;

test.beforeEach(async ({ page }) => {
  pm = new PageManager(page)
  await page.goto('/')
})
test('Validate selected specialties', async ({ page }) => {
  await pm.navigateTo().goToVeterinariansPage()
  await pm.onVeterinariansPage().expectTableHeadingToBe('Veterinarians')
  await pm.onVeterinariansPage().editVetNamed('Helen Leary')
  await pm.onVetEditPage().expectSelectedSpecialtiesDisplayed('radiology')
  await pm.onVetEditPage().openSpecialtyDropdown()
  await pm.onVetEditPage().expectSpecialityChecked('radiology')
  await pm.onVetEditPage().expectSpecialtiesUnchecked(['surgery', 'dentistry'])
  await pm.onVetEditPage().checkSpecialty('surgery')
  await pm.onVetEditPage().uncheckSpecialty('radiology')
  await pm.onVetEditPage().expectSelectedSpecialtiesDisplayed('surgery')
  await pm.onVetEditPage().checkSpecialty('dentistry')
  await pm.onVetEditPage().expectSelectedSpecialtiesDisplayed(['surgery', 'dentistry'])
})
test('Select all specialties', async ({ page }) => {
  await pm.navigateTo().goToVeterinariansPage()
  await pm.onVeterinariansPage().editVetNamed('Rafael Ortega')
  await pm.onVetEditPage().expectSelectedSpecialtiesDisplayed('surgery')
  await pm.onVetEditPage().openSpecialtyDropdown()
  await pm.onVetEditPage().checkAndAssertAllSpecialties()
  await pm.onVetEditPage().expectSelectedSpecialtiesDisplayed(['surgery', 'radiology', 'dentistry'])
})
test('Unselect all specialties', async ({ page }) => {
  await pm.navigateTo().goToVeterinariansPage()
  await pm.onVeterinariansPage().editVetNamed('Linda Douglas')
  await pm.onVetEditPage().expectSelectedSpecialtiesDisplayed(['dentistry', 'surgery'])
  await pm.onVetEditPage().openSpecialtyDropdown()
  await pm.onVetEditPage().uncheckAndAssertAllSpecialties()
  await pm.onVetEditPage().expectSelectedSpecialtiesDisplayed('')
})
test('Validate specialty update', async ({ page }) => {
  await pm.navigateTo().goToVeterinariansPage()
  await pm.onVeterinariansPage().expectVetToHaveSpecialty('Rafael Ortega', 'surgery')
  await pm.navigateTo().goToSpecialtiesPage()
  await pm.onSpecialtyPage().expectTableHeadingToBe('Specialties')
  await pm.onSpecialtyPage().editSpecialty('surgery')
  await pm.onSpecialtyPage().expectEditSpecialtyForm()
  await pm.onSpecialtyPage().updateSpecialty('dermatology')
  await pm.onSpecialtyPage().expectSpecialtyToBeChanged('surgery', 'dermatology')
  await pm.navigateTo().goToVeterinariansPage()
  await pm.onVeterinariansPage().expectVetToHaveSpecialty('Rafael Ortega', 'dermatology')
  await pm.navigateTo().goToSpecialtiesPage()
  await pm.onSpecialtyPage().editSpecialty('dermatology')
  await pm.onSpecialtyPage().updateSpecialty('surgery')
  await pm.onSpecialtyPage().expectSpecialtyToBeChanged('dermatology', 'surgery')
  await pm.navigateTo().goToVeterinariansPage()
  await pm.onVeterinariansPage().expectVetToHaveSpecialty('Rafael Ortega', 'surgery')
})
test('Validate specialty lists', async ({ page }) => {
  await pm.navigateTo().goToSpecialtiesPage()
  await pm.onSpecialtyPage().addNewSpecialty('oncology')
  const specialtiesListedOnSpecialitiesPage = await pm.onSpecialtyPage().getAllSpecialtyOptions()
  await pm.navigateTo().goToVeterinariansPage()
  await pm.onVeterinariansPage().editVetNamed('Sharon Jenkins')
  await pm.onVetEditPage().openSpecialtyDropdown()
  const specialtiesListedOnVetEditPage = await pm.onVetEditPage().getAllSpecialtyOptions()
  expect(specialtiesListedOnSpecialitiesPage).toEqual(specialtiesListedOnVetEditPage)
  await pm.onVetEditPage().selectAndSaveSpecialty('oncology')
  await pm.onVeterinariansPage().expectVetToHaveSpecialty('Sharon Jenkins', 'oncology')
  await pm.navigateTo().goToSpecialtiesPage()
  await pm.onSpecialtyPage().deleteSpecialty('oncology')
  await pm.navigateTo().goToVeterinariansPage()
  await pm.onVeterinariansPage().expectVetNotToHaveSpecialty('Sharon Jenkins')
})


